// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CloudSign.proto

package Diadoc.Api.Proto;

public final class CloudSignProtos {
  private CloudSignProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CloudSignRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Diadoc.Api.Proto.CloudSignRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
     */
    java.util.List<Diadoc.Api.Proto.CloudSignProtos.CloudSignFile> 
        getFilesList();
    /**
     * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
     */
    Diadoc.Api.Proto.CloudSignProtos.CloudSignFile getFiles(int index);
    /**
     * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
     */
    int getFilesCount();
    /**
     * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
     */
    java.util.List<? extends Diadoc.Api.Proto.CloudSignProtos.CloudSignFileOrBuilder> 
        getFilesOrBuilderList();
    /**
     * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
     */
    Diadoc.Api.Proto.CloudSignProtos.CloudSignFileOrBuilder getFilesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Diadoc.Api.Proto.CloudSignRequest}
   */
  public static final class CloudSignRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Diadoc.Api.Proto.CloudSignRequest)
      CloudSignRequestOrBuilder {
    // Use CloudSignRequest.newBuilder() to construct.
    private CloudSignRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CloudSignRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CloudSignRequest defaultInstance;
    public static CloudSignRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CloudSignRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CloudSignRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                files_ = new java.util.ArrayList<Diadoc.Api.Proto.CloudSignProtos.CloudSignFile>();
                mutable_bitField0_ |= 0x00000001;
              }
              files_.add(input.readMessage(Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          files_ = java.util.Collections.unmodifiableList(files_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest.class, Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CloudSignRequest> PARSER =
        new com.google.protobuf.AbstractParser<CloudSignRequest>() {
      public CloudSignRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CloudSignRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CloudSignRequest> getParserForType() {
      return PARSER;
    }

    public static final int FILES_FIELD_NUMBER = 1;
    private java.util.List<Diadoc.Api.Proto.CloudSignProtos.CloudSignFile> files_;
    /**
     * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
     */
    public java.util.List<Diadoc.Api.Proto.CloudSignProtos.CloudSignFile> getFilesList() {
      return files_;
    }
    /**
     * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
     */
    public java.util.List<? extends Diadoc.Api.Proto.CloudSignProtos.CloudSignFileOrBuilder> 
        getFilesOrBuilderList() {
      return files_;
    }
    /**
     * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
     */
    public int getFilesCount() {
      return files_.size();
    }
    /**
     * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
     */
    public Diadoc.Api.Proto.CloudSignProtos.CloudSignFile getFiles(int index) {
      return files_.get(index);
    }
    /**
     * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
     */
    public Diadoc.Api.Proto.CloudSignProtos.CloudSignFileOrBuilder getFilesOrBuilder(
        int index) {
      return files_.get(index);
    }

    private void initFields() {
      files_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFilesCount(); i++) {
        if (!getFiles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < files_.size(); i++) {
        output.writeMessage(1, files_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < files_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, files_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Diadoc.Api.Proto.CloudSignRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Diadoc.Api.Proto.CloudSignRequest)
        Diadoc.Api.Proto.CloudSignProtos.CloudSignRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest.class, Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest.Builder.class);
      }

      // Construct using Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFilesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          filesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignRequest_descriptor;
      }

      public Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest getDefaultInstanceForType() {
        return Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest.getDefaultInstance();
      }

      public Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest build() {
        Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest buildPartial() {
        Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest result = new Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest(this);
        int from_bitField0_ = bitField0_;
        if (filesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            files_ = java.util.Collections.unmodifiableList(files_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.files_ = files_;
        } else {
          result.files_ = filesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest) {
          return mergeFrom((Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest other) {
        if (other == Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest.getDefaultInstance()) return this;
        if (filesBuilder_ == null) {
          if (!other.files_.isEmpty()) {
            if (files_.isEmpty()) {
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFilesIsMutable();
              files_.addAll(other.files_);
            }
            onChanged();
          }
        } else {
          if (!other.files_.isEmpty()) {
            if (filesBuilder_.isEmpty()) {
              filesBuilder_.dispose();
              filesBuilder_ = null;
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000001);
              filesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFilesFieldBuilder() : null;
            } else {
              filesBuilder_.addAllMessages(other.files_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFilesCount(); i++) {
          if (!getFiles(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Diadoc.Api.Proto.CloudSignProtos.CloudSignRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Diadoc.Api.Proto.CloudSignProtos.CloudSignFile> files_ =
        java.util.Collections.emptyList();
      private void ensureFilesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          files_ = new java.util.ArrayList<Diadoc.Api.Proto.CloudSignProtos.CloudSignFile>(files_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Diadoc.Api.Proto.CloudSignProtos.CloudSignFile, Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.Builder, Diadoc.Api.Proto.CloudSignProtos.CloudSignFileOrBuilder> filesBuilder_;

      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public java.util.List<Diadoc.Api.Proto.CloudSignProtos.CloudSignFile> getFilesList() {
        if (filesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(files_);
        } else {
          return filesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public int getFilesCount() {
        if (filesBuilder_ == null) {
          return files_.size();
        } else {
          return filesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Diadoc.Api.Proto.CloudSignProtos.CloudSignFile getFiles(int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);
        } else {
          return filesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Builder setFiles(
          int index, Diadoc.Api.Proto.CloudSignProtos.CloudSignFile value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.set(index, value);
          onChanged();
        } else {
          filesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Builder setFiles(
          int index, Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.set(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Builder addFiles(Diadoc.Api.Proto.CloudSignProtos.CloudSignFile value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(value);
          onChanged();
        } else {
          filesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Builder addFiles(
          int index, Diadoc.Api.Proto.CloudSignProtos.CloudSignFile value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(index, value);
          onChanged();
        } else {
          filesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Builder addFiles(
          Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Builder addFiles(
          int index, Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Builder addAllFiles(
          java.lang.Iterable<? extends Diadoc.Api.Proto.CloudSignProtos.CloudSignFile> values) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, files_);
          onChanged();
        } else {
          filesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Builder clearFiles() {
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          filesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Builder removeFiles(int index) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.remove(index);
          onChanged();
        } else {
          filesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.Builder getFilesBuilder(
          int index) {
        return getFilesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Diadoc.Api.Proto.CloudSignProtos.CloudSignFileOrBuilder getFilesOrBuilder(
          int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);  } else {
          return filesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public java.util.List<? extends Diadoc.Api.Proto.CloudSignProtos.CloudSignFileOrBuilder> 
           getFilesOrBuilderList() {
        if (filesBuilder_ != null) {
          return filesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(files_);
        }
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.Builder addFilesBuilder() {
        return getFilesFieldBuilder().addBuilder(
            Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.getDefaultInstance());
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.Builder addFilesBuilder(
          int index) {
        return getFilesFieldBuilder().addBuilder(
            index, Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.getDefaultInstance());
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.CloudSignFile Files = 1;</code>
       */
      public java.util.List<Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.Builder> 
           getFilesBuilderList() {
        return getFilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Diadoc.Api.Proto.CloudSignProtos.CloudSignFile, Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.Builder, Diadoc.Api.Proto.CloudSignProtos.CloudSignFileOrBuilder> 
          getFilesFieldBuilder() {
        if (filesBuilder_ == null) {
          filesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Diadoc.Api.Proto.CloudSignProtos.CloudSignFile, Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.Builder, Diadoc.Api.Proto.CloudSignProtos.CloudSignFileOrBuilder>(
                  files_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          files_ = null;
        }
        return filesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Diadoc.Api.Proto.CloudSignRequest)
    }

    static {
      defaultInstance = new CloudSignRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.CloudSignRequest)
  }

  public interface CloudSignFileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Diadoc.Api.Proto.CloudSignFile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
     */
    boolean hasContent();
    /**
     * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
     */
    Diadoc.Api.Proto.Content_v2Protos.Content_v2 getContent();
    /**
     * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
     */
    Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder getContentOrBuilder();

    /**
     * <code>optional string FileName = 2;</code>
     */
    boolean hasFileName();
    /**
     * <code>optional string FileName = 2;</code>
     */
    java.lang.String getFileName();
    /**
     * <code>optional string FileName = 2;</code>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();
  }
  /**
   * Protobuf type {@code Diadoc.Api.Proto.CloudSignFile}
   */
  public static final class CloudSignFile extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Diadoc.Api.Proto.CloudSignFile)
      CloudSignFileOrBuilder {
    // Use CloudSignFile.newBuilder() to construct.
    private CloudSignFile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CloudSignFile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CloudSignFile defaultInstance;
    public static CloudSignFile getDefaultInstance() {
      return defaultInstance;
    }

    public CloudSignFile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CloudSignFile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = content_.toBuilder();
              }
              content_ = input.readMessage(Diadoc.Api.Proto.Content_v2Protos.Content_v2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(content_);
                content_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              fileName_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignFile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.class, Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.Builder.class);
    }

    public static com.google.protobuf.Parser<CloudSignFile> PARSER =
        new com.google.protobuf.AbstractParser<CloudSignFile>() {
      public CloudSignFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CloudSignFile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CloudSignFile> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CONTENT_FIELD_NUMBER = 1;
    private Diadoc.Api.Proto.Content_v2Protos.Content_v2 content_;
    /**
     * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
     */
    public Diadoc.Api.Proto.Content_v2Protos.Content_v2 getContent() {
      return content_;
    }
    /**
     * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
     */
    public Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder getContentOrBuilder() {
      return content_;
    }

    public static final int FILENAME_FIELD_NUMBER = 2;
    private java.lang.Object fileName_;
    /**
     * <code>optional string FileName = 2;</code>
     */
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string FileName = 2;</code>
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fileName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string FileName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      content_ = Diadoc.Api.Proto.Content_v2Protos.Content_v2.getDefaultInstance();
      fileName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasContent()) {
        if (!getContent().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, content_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFileNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, content_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFileNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Diadoc.Api.Proto.CloudSignProtos.CloudSignFile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Diadoc.Api.Proto.CloudSignFile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Diadoc.Api.Proto.CloudSignFile)
        Diadoc.Api.Proto.CloudSignProtos.CloudSignFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignFile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.class, Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.Builder.class);
      }

      // Construct using Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getContentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (contentBuilder_ == null) {
          content_ = Diadoc.Api.Proto.Content_v2Protos.Content_v2.getDefaultInstance();
        } else {
          contentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        fileName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignFile_descriptor;
      }

      public Diadoc.Api.Proto.CloudSignProtos.CloudSignFile getDefaultInstanceForType() {
        return Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.getDefaultInstance();
      }

      public Diadoc.Api.Proto.CloudSignProtos.CloudSignFile build() {
        Diadoc.Api.Proto.CloudSignProtos.CloudSignFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Diadoc.Api.Proto.CloudSignProtos.CloudSignFile buildPartial() {
        Diadoc.Api.Proto.CloudSignProtos.CloudSignFile result = new Diadoc.Api.Proto.CloudSignProtos.CloudSignFile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (contentBuilder_ == null) {
          result.content_ = content_;
        } else {
          result.content_ = contentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fileName_ = fileName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Diadoc.Api.Proto.CloudSignProtos.CloudSignFile) {
          return mergeFrom((Diadoc.Api.Proto.CloudSignProtos.CloudSignFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Diadoc.Api.Proto.CloudSignProtos.CloudSignFile other) {
        if (other == Diadoc.Api.Proto.CloudSignProtos.CloudSignFile.getDefaultInstance()) return this;
        if (other.hasContent()) {
          mergeContent(other.getContent());
        }
        if (other.hasFileName()) {
          bitField0_ |= 0x00000002;
          fileName_ = other.fileName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasContent()) {
          if (!getContent().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Diadoc.Api.Proto.CloudSignProtos.CloudSignFile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Diadoc.Api.Proto.CloudSignProtos.CloudSignFile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Diadoc.Api.Proto.Content_v2Protos.Content_v2 content_ = Diadoc.Api.Proto.Content_v2Protos.Content_v2.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.Content_v2Protos.Content_v2, Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder, Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder> contentBuilder_;
      /**
       * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
       */
      public Diadoc.Api.Proto.Content_v2Protos.Content_v2 getContent() {
        if (contentBuilder_ == null) {
          return content_;
        } else {
          return contentBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
       */
      public Builder setContent(Diadoc.Api.Proto.Content_v2Protos.Content_v2 value) {
        if (contentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          content_ = value;
          onChanged();
        } else {
          contentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
       */
      public Builder setContent(
          Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder builderForValue) {
        if (contentBuilder_ == null) {
          content_ = builderForValue.build();
          onChanged();
        } else {
          contentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
       */
      public Builder mergeContent(Diadoc.Api.Proto.Content_v2Protos.Content_v2 value) {
        if (contentBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              content_ != Diadoc.Api.Proto.Content_v2Protos.Content_v2.getDefaultInstance()) {
            content_ =
              Diadoc.Api.Proto.Content_v2Protos.Content_v2.newBuilder(content_).mergeFrom(value).buildPartial();
          } else {
            content_ = value;
          }
          onChanged();
        } else {
          contentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
       */
      public Builder clearContent() {
        if (contentBuilder_ == null) {
          content_ = Diadoc.Api.Proto.Content_v2Protos.Content_v2.getDefaultInstance();
          onChanged();
        } else {
          contentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
       */
      public Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder getContentBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getContentFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
       */
      public Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder getContentOrBuilder() {
        if (contentBuilder_ != null) {
          return contentBuilder_.getMessageOrBuilder();
        } else {
          return content_;
        }
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Content_v2 Content = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.Content_v2Protos.Content_v2, Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder, Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder> 
          getContentFieldBuilder() {
        if (contentBuilder_ == null) {
          contentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Diadoc.Api.Proto.Content_v2Protos.Content_v2, Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder, Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder>(
                  getContent(),
                  getParentForChildren(),
                  isClean());
          content_ = null;
        }
        return contentBuilder_;
      }

      private java.lang.Object fileName_ = "";
      /**
       * <code>optional string FileName = 2;</code>
       */
      public boolean hasFileName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string FileName = 2;</code>
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fileName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string FileName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string FileName = 2;</code>
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string FileName = 2;</code>
       */
      public Builder clearFileName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string FileName = 2;</code>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fileName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Diadoc.Api.Proto.CloudSignFile)
    }

    static {
      defaultInstance = new CloudSignFile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.CloudSignFile)
  }

  public interface CloudSignResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Diadoc.Api.Proto.CloudSignResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string Token = 1;</code>
     */
    boolean hasToken();
    /**
     * <code>optional string Token = 1;</code>
     */
    java.lang.String getToken();
    /**
     * <code>optional string Token = 1;</code>
     */
    com.google.protobuf.ByteString
        getTokenBytes();
  }
  /**
   * Protobuf type {@code Diadoc.Api.Proto.CloudSignResult}
   */
  public static final class CloudSignResult extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Diadoc.Api.Proto.CloudSignResult)
      CloudSignResultOrBuilder {
    // Use CloudSignResult.newBuilder() to construct.
    private CloudSignResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CloudSignResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CloudSignResult defaultInstance;
    public static CloudSignResult getDefaultInstance() {
      return defaultInstance;
    }

    public CloudSignResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CloudSignResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              token_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Diadoc.Api.Proto.CloudSignProtos.CloudSignResult.class, Diadoc.Api.Proto.CloudSignProtos.CloudSignResult.Builder.class);
    }

    public static com.google.protobuf.Parser<CloudSignResult> PARSER =
        new com.google.protobuf.AbstractParser<CloudSignResult>() {
      public CloudSignResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CloudSignResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CloudSignResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private java.lang.Object token_;
    /**
     * <code>optional string Token = 1;</code>
     */
    public boolean hasToken() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string Token = 1;</code>
     */
    public java.lang.String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          token_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Token = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      token_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTokenBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTokenBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Diadoc.Api.Proto.CloudSignProtos.CloudSignResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Diadoc.Api.Proto.CloudSignResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Diadoc.Api.Proto.CloudSignResult)
        Diadoc.Api.Proto.CloudSignProtos.CloudSignResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Diadoc.Api.Proto.CloudSignProtos.CloudSignResult.class, Diadoc.Api.Proto.CloudSignProtos.CloudSignResult.Builder.class);
      }

      // Construct using Diadoc.Api.Proto.CloudSignProtos.CloudSignResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        token_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignResult_descriptor;
      }

      public Diadoc.Api.Proto.CloudSignProtos.CloudSignResult getDefaultInstanceForType() {
        return Diadoc.Api.Proto.CloudSignProtos.CloudSignResult.getDefaultInstance();
      }

      public Diadoc.Api.Proto.CloudSignProtos.CloudSignResult build() {
        Diadoc.Api.Proto.CloudSignProtos.CloudSignResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Diadoc.Api.Proto.CloudSignProtos.CloudSignResult buildPartial() {
        Diadoc.Api.Proto.CloudSignProtos.CloudSignResult result = new Diadoc.Api.Proto.CloudSignProtos.CloudSignResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.token_ = token_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Diadoc.Api.Proto.CloudSignProtos.CloudSignResult) {
          return mergeFrom((Diadoc.Api.Proto.CloudSignProtos.CloudSignResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Diadoc.Api.Proto.CloudSignProtos.CloudSignResult other) {
        if (other == Diadoc.Api.Proto.CloudSignProtos.CloudSignResult.getDefaultInstance()) return this;
        if (other.hasToken()) {
          bitField0_ |= 0x00000001;
          token_ = other.token_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Diadoc.Api.Proto.CloudSignProtos.CloudSignResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Diadoc.Api.Proto.CloudSignProtos.CloudSignResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object token_ = "";
      /**
       * <code>optional string Token = 1;</code>
       */
      public boolean hasToken() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string Token = 1;</code>
       */
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            token_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Token = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Token = 1;</code>
       */
      public Builder setToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Token = 1;</code>
       */
      public Builder clearToken() {
        bitField0_ = (bitField0_ & ~0x00000001);
        token_ = getDefaultInstance().getToken();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Token = 1;</code>
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        token_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Diadoc.Api.Proto.CloudSignResult)
    }

    static {
      defaultInstance = new CloudSignResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.CloudSignResult)
  }

  public interface CloudSignConfirmResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Diadoc.Api.Proto.CloudSignConfirmResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
     */
    java.util.List<Diadoc.Api.Proto.Content_v2Protos.Content_v2> 
        getSignaturesList();
    /**
     * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
     */
    Diadoc.Api.Proto.Content_v2Protos.Content_v2 getSignatures(int index);
    /**
     * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
     */
    int getSignaturesCount();
    /**
     * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
     */
    java.util.List<? extends Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder> 
        getSignaturesOrBuilderList();
    /**
     * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
     */
    Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder getSignaturesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Diadoc.Api.Proto.CloudSignConfirmResult}
   */
  public static final class CloudSignConfirmResult extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Diadoc.Api.Proto.CloudSignConfirmResult)
      CloudSignConfirmResultOrBuilder {
    // Use CloudSignConfirmResult.newBuilder() to construct.
    private CloudSignConfirmResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CloudSignConfirmResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CloudSignConfirmResult defaultInstance;
    public static CloudSignConfirmResult getDefaultInstance() {
      return defaultInstance;
    }

    public CloudSignConfirmResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CloudSignConfirmResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                signatures_ = new java.util.ArrayList<Diadoc.Api.Proto.Content_v2Protos.Content_v2>();
                mutable_bitField0_ |= 0x00000001;
              }
              signatures_.add(input.readMessage(Diadoc.Api.Proto.Content_v2Protos.Content_v2.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          signatures_ = java.util.Collections.unmodifiableList(signatures_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignConfirmResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignConfirmResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult.class, Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult.Builder.class);
    }

    public static com.google.protobuf.Parser<CloudSignConfirmResult> PARSER =
        new com.google.protobuf.AbstractParser<CloudSignConfirmResult>() {
      public CloudSignConfirmResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CloudSignConfirmResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CloudSignConfirmResult> getParserForType() {
      return PARSER;
    }

    public static final int SIGNATURES_FIELD_NUMBER = 1;
    private java.util.List<Diadoc.Api.Proto.Content_v2Protos.Content_v2> signatures_;
    /**
     * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
     */
    public java.util.List<Diadoc.Api.Proto.Content_v2Protos.Content_v2> getSignaturesList() {
      return signatures_;
    }
    /**
     * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
     */
    public java.util.List<? extends Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder> 
        getSignaturesOrBuilderList() {
      return signatures_;
    }
    /**
     * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
     */
    public int getSignaturesCount() {
      return signatures_.size();
    }
    /**
     * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
     */
    public Diadoc.Api.Proto.Content_v2Protos.Content_v2 getSignatures(int index) {
      return signatures_.get(index);
    }
    /**
     * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
     */
    public Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder getSignaturesOrBuilder(
        int index) {
      return signatures_.get(index);
    }

    private void initFields() {
      signatures_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getSignaturesCount(); i++) {
        if (!getSignatures(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < signatures_.size(); i++) {
        output.writeMessage(1, signatures_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < signatures_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, signatures_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Diadoc.Api.Proto.CloudSignConfirmResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Diadoc.Api.Proto.CloudSignConfirmResult)
        Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignConfirmResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignConfirmResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult.class, Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult.Builder.class);
      }

      // Construct using Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSignaturesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (signaturesBuilder_ == null) {
          signatures_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          signaturesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_CloudSignConfirmResult_descriptor;
      }

      public Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult getDefaultInstanceForType() {
        return Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult.getDefaultInstance();
      }

      public Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult build() {
        Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult buildPartial() {
        Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult result = new Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult(this);
        int from_bitField0_ = bitField0_;
        if (signaturesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            signatures_ = java.util.Collections.unmodifiableList(signatures_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.signatures_ = signatures_;
        } else {
          result.signatures_ = signaturesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult) {
          return mergeFrom((Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult other) {
        if (other == Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult.getDefaultInstance()) return this;
        if (signaturesBuilder_ == null) {
          if (!other.signatures_.isEmpty()) {
            if (signatures_.isEmpty()) {
              signatures_ = other.signatures_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSignaturesIsMutable();
              signatures_.addAll(other.signatures_);
            }
            onChanged();
          }
        } else {
          if (!other.signatures_.isEmpty()) {
            if (signaturesBuilder_.isEmpty()) {
              signaturesBuilder_.dispose();
              signaturesBuilder_ = null;
              signatures_ = other.signatures_;
              bitField0_ = (bitField0_ & ~0x00000001);
              signaturesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSignaturesFieldBuilder() : null;
            } else {
              signaturesBuilder_.addAllMessages(other.signatures_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getSignaturesCount(); i++) {
          if (!getSignatures(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Diadoc.Api.Proto.CloudSignProtos.CloudSignConfirmResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Diadoc.Api.Proto.Content_v2Protos.Content_v2> signatures_ =
        java.util.Collections.emptyList();
      private void ensureSignaturesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          signatures_ = new java.util.ArrayList<Diadoc.Api.Proto.Content_v2Protos.Content_v2>(signatures_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Diadoc.Api.Proto.Content_v2Protos.Content_v2, Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder, Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder> signaturesBuilder_;

      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public java.util.List<Diadoc.Api.Proto.Content_v2Protos.Content_v2> getSignaturesList() {
        if (signaturesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signatures_);
        } else {
          return signaturesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public int getSignaturesCount() {
        if (signaturesBuilder_ == null) {
          return signatures_.size();
        } else {
          return signaturesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Diadoc.Api.Proto.Content_v2Protos.Content_v2 getSignatures(int index) {
        if (signaturesBuilder_ == null) {
          return signatures_.get(index);
        } else {
          return signaturesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Builder setSignatures(
          int index, Diadoc.Api.Proto.Content_v2Protos.Content_v2 value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.set(index, value);
          onChanged();
        } else {
          signaturesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Builder setSignatures(
          int index, Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.set(index, builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Builder addSignatures(Diadoc.Api.Proto.Content_v2Protos.Content_v2 value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.add(value);
          onChanged();
        } else {
          signaturesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Builder addSignatures(
          int index, Diadoc.Api.Proto.Content_v2Protos.Content_v2 value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.add(index, value);
          onChanged();
        } else {
          signaturesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Builder addSignatures(
          Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.add(builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Builder addSignatures(
          int index, Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.add(index, builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Builder addAllSignatures(
          java.lang.Iterable<? extends Diadoc.Api.Proto.Content_v2Protos.Content_v2> values) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signatures_);
          onChanged();
        } else {
          signaturesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Builder clearSignatures() {
        if (signaturesBuilder_ == null) {
          signatures_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          signaturesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Builder removeSignatures(int index) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.remove(index);
          onChanged();
        } else {
          signaturesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder getSignaturesBuilder(
          int index) {
        return getSignaturesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder getSignaturesOrBuilder(
          int index) {
        if (signaturesBuilder_ == null) {
          return signatures_.get(index);  } else {
          return signaturesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public java.util.List<? extends Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder> 
           getSignaturesOrBuilderList() {
        if (signaturesBuilder_ != null) {
          return signaturesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signatures_);
        }
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder addSignaturesBuilder() {
        return getSignaturesFieldBuilder().addBuilder(
            Diadoc.Api.Proto.Content_v2Protos.Content_v2.getDefaultInstance());
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder addSignaturesBuilder(
          int index) {
        return getSignaturesFieldBuilder().addBuilder(
            index, Diadoc.Api.Proto.Content_v2Protos.Content_v2.getDefaultInstance());
      }
      /**
       * <code>repeated .Diadoc.Api.Proto.Content_v2 Signatures = 1;</code>
       */
      public java.util.List<Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder> 
           getSignaturesBuilderList() {
        return getSignaturesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Diadoc.Api.Proto.Content_v2Protos.Content_v2, Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder, Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder> 
          getSignaturesFieldBuilder() {
        if (signaturesBuilder_ == null) {
          signaturesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Diadoc.Api.Proto.Content_v2Protos.Content_v2, Diadoc.Api.Proto.Content_v2Protos.Content_v2.Builder, Diadoc.Api.Proto.Content_v2Protos.Content_v2OrBuilder>(
                  signatures_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          signatures_ = null;
        }
        return signaturesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Diadoc.Api.Proto.CloudSignConfirmResult)
    }

    static {
      defaultInstance = new CloudSignConfirmResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.CloudSignConfirmResult)
  }

  public interface AutosignReceiptsResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Diadoc.Api.Proto.AutosignReceiptsResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 SignedReceiptsCount = 1;</code>
     */
    boolean hasSignedReceiptsCount();
    /**
     * <code>required int64 SignedReceiptsCount = 1;</code>
     */
    long getSignedReceiptsCount();

    /**
     * <code>required string NextBatchKey = 2;</code>
     */
    boolean hasNextBatchKey();
    /**
     * <code>required string NextBatchKey = 2;</code>
     */
    java.lang.String getNextBatchKey();
    /**
     * <code>required string NextBatchKey = 2;</code>
     */
    com.google.protobuf.ByteString
        getNextBatchKeyBytes();
  }
  /**
   * Protobuf type {@code Diadoc.Api.Proto.AutosignReceiptsResult}
   */
  public static final class AutosignReceiptsResult extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Diadoc.Api.Proto.AutosignReceiptsResult)
      AutosignReceiptsResultOrBuilder {
    // Use AutosignReceiptsResult.newBuilder() to construct.
    private AutosignReceiptsResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AutosignReceiptsResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AutosignReceiptsResult defaultInstance;
    public static AutosignReceiptsResult getDefaultInstance() {
      return defaultInstance;
    }

    public AutosignReceiptsResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AutosignReceiptsResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              signedReceiptsCount_ = input.readInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              nextBatchKey_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_AutosignReceiptsResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_AutosignReceiptsResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult.class, Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult.Builder.class);
    }

    public static com.google.protobuf.Parser<AutosignReceiptsResult> PARSER =
        new com.google.protobuf.AbstractParser<AutosignReceiptsResult>() {
      public AutosignReceiptsResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AutosignReceiptsResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AutosignReceiptsResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SIGNEDRECEIPTSCOUNT_FIELD_NUMBER = 1;
    private long signedReceiptsCount_;
    /**
     * <code>required int64 SignedReceiptsCount = 1;</code>
     */
    public boolean hasSignedReceiptsCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 SignedReceiptsCount = 1;</code>
     */
    public long getSignedReceiptsCount() {
      return signedReceiptsCount_;
    }

    public static final int NEXTBATCHKEY_FIELD_NUMBER = 2;
    private java.lang.Object nextBatchKey_;
    /**
     * <code>required string NextBatchKey = 2;</code>
     */
    public boolean hasNextBatchKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string NextBatchKey = 2;</code>
     */
    public java.lang.String getNextBatchKey() {
      java.lang.Object ref = nextBatchKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nextBatchKey_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string NextBatchKey = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNextBatchKeyBytes() {
      java.lang.Object ref = nextBatchKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextBatchKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      signedReceiptsCount_ = 0L;
      nextBatchKey_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSignedReceiptsCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNextBatchKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, signedReceiptsCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNextBatchKeyBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, signedReceiptsCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNextBatchKeyBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Diadoc.Api.Proto.AutosignReceiptsResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Diadoc.Api.Proto.AutosignReceiptsResult)
        Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_AutosignReceiptsResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_AutosignReceiptsResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult.class, Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult.Builder.class);
      }

      // Construct using Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        signedReceiptsCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        nextBatchKey_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Diadoc.Api.Proto.CloudSignProtos.internal_static_Diadoc_Api_Proto_AutosignReceiptsResult_descriptor;
      }

      public Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult getDefaultInstanceForType() {
        return Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult.getDefaultInstance();
      }

      public Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult build() {
        Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult buildPartial() {
        Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult result = new Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.signedReceiptsCount_ = signedReceiptsCount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nextBatchKey_ = nextBatchKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult) {
          return mergeFrom((Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult other) {
        if (other == Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult.getDefaultInstance()) return this;
        if (other.hasSignedReceiptsCount()) {
          setSignedReceiptsCount(other.getSignedReceiptsCount());
        }
        if (other.hasNextBatchKey()) {
          bitField0_ |= 0x00000002;
          nextBatchKey_ = other.nextBatchKey_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSignedReceiptsCount()) {
          
          return false;
        }
        if (!hasNextBatchKey()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Diadoc.Api.Proto.CloudSignProtos.AutosignReceiptsResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long signedReceiptsCount_ ;
      /**
       * <code>required int64 SignedReceiptsCount = 1;</code>
       */
      public boolean hasSignedReceiptsCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 SignedReceiptsCount = 1;</code>
       */
      public long getSignedReceiptsCount() {
        return signedReceiptsCount_;
      }
      /**
       * <code>required int64 SignedReceiptsCount = 1;</code>
       */
      public Builder setSignedReceiptsCount(long value) {
        bitField0_ |= 0x00000001;
        signedReceiptsCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 SignedReceiptsCount = 1;</code>
       */
      public Builder clearSignedReceiptsCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        signedReceiptsCount_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object nextBatchKey_ = "";
      /**
       * <code>required string NextBatchKey = 2;</code>
       */
      public boolean hasNextBatchKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string NextBatchKey = 2;</code>
       */
      public java.lang.String getNextBatchKey() {
        java.lang.Object ref = nextBatchKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nextBatchKey_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string NextBatchKey = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNextBatchKeyBytes() {
        java.lang.Object ref = nextBatchKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nextBatchKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string NextBatchKey = 2;</code>
       */
      public Builder setNextBatchKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nextBatchKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string NextBatchKey = 2;</code>
       */
      public Builder clearNextBatchKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nextBatchKey_ = getDefaultInstance().getNextBatchKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string NextBatchKey = 2;</code>
       */
      public Builder setNextBatchKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nextBatchKey_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Diadoc.Api.Proto.AutosignReceiptsResult)
    }

    static {
      defaultInstance = new AutosignReceiptsResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.AutosignReceiptsResult)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Diadoc_Api_Proto_CloudSignRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Diadoc_Api_Proto_CloudSignRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Diadoc_Api_Proto_CloudSignFile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Diadoc_Api_Proto_CloudSignFile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Diadoc_Api_Proto_CloudSignResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Diadoc_Api_Proto_CloudSignResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Diadoc_Api_Proto_CloudSignConfirmResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Diadoc_Api_Proto_CloudSignConfirmResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Diadoc_Api_Proto_AutosignReceiptsResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Diadoc_Api_Proto_AutosignReceiptsResult_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017CloudSign.proto\022\020Diadoc.Api.Proto\032\020Con" +
      "tent_v2.proto\"B\n\020CloudSignRequest\022.\n\005Fil" +
      "es\030\001 \003(\0132\037.Diadoc.Api.Proto.CloudSignFil" +
      "e\"P\n\rCloudSignFile\022-\n\007Content\030\001 \001(\0132\034.Di" +
      "adoc.Api.Proto.Content_v2\022\020\n\010FileName\030\002 " +
      "\001(\t\" \n\017CloudSignResult\022\r\n\005Token\030\001 \001(\t\"J\n" +
      "\026CloudSignConfirmResult\0220\n\nSignatures\030\001 " +
      "\003(\0132\034.Diadoc.Api.Proto.Content_v2\"K\n\026Aut" +
      "osignReceiptsResult\022\033\n\023SignedReceiptsCou" +
      "nt\030\001 \002(\003\022\024\n\014NextBatchKey\030\002 \002(\tB\021B\017CloudS",
      "ignProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Diadoc.Api.Proto.Content_v2Protos.getDescriptor(),
        }, assigner);
    internal_static_Diadoc_Api_Proto_CloudSignRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Diadoc_Api_Proto_CloudSignRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Diadoc_Api_Proto_CloudSignRequest_descriptor,
        new java.lang.String[] { "Files", });
    internal_static_Diadoc_Api_Proto_CloudSignFile_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Diadoc_Api_Proto_CloudSignFile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Diadoc_Api_Proto_CloudSignFile_descriptor,
        new java.lang.String[] { "Content", "FileName", });
    internal_static_Diadoc_Api_Proto_CloudSignResult_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Diadoc_Api_Proto_CloudSignResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Diadoc_Api_Proto_CloudSignResult_descriptor,
        new java.lang.String[] { "Token", });
    internal_static_Diadoc_Api_Proto_CloudSignConfirmResult_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Diadoc_Api_Proto_CloudSignConfirmResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Diadoc_Api_Proto_CloudSignConfirmResult_descriptor,
        new java.lang.String[] { "Signatures", });
    internal_static_Diadoc_Api_Proto_AutosignReceiptsResult_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Diadoc_Api_Proto_AutosignReceiptsResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Diadoc_Api_Proto_AutosignReceiptsResult_descriptor,
        new java.lang.String[] { "SignedReceiptsCount", "NextBatchKey", });
    Diadoc.Api.Proto.Content_v2Protos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
